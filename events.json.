<!DOCTYPE html>
<html lang="es">
<head>
<meta charset="utf-8"/>
<meta name="viewport" content="width=device-width,initial-scale=1"/>
<title>Golden Moms â€” Panel (diagnÃ³stico + resiliente)</title>
<link rel="icon" href="Logo.webp"/>
<style>
:root{ --blue:#0f3a78; --lime:#9be22d; --mut:#64748b; --b:#e2e8f0; --bg:#f7f8fa; }
*{box-sizing:border-box}
html,body{margin:0;height:100%;background:var(--bg);color:#0f172a;font-family:Inter,system-ui,Segoe UI,Roboto,Arial}
.top{position:sticky;top:0;background:#fff;border-bottom:1px solid var(--b);display:flex;align-items:center;justify-content:space-between;padding:10px 14px;gap:12px}
.brand{display:flex;gap:10px;align-items:center}
.brand img{width:32px;height:32px;border-radius:50%;border:2px solid var(--blue)}
.nav{display:flex;gap:8px;align-items:center}
.nav .tab{border:1px solid var(--b);border-radius:999px;padding:8px 12px;background:#fff;cursor:pointer}
.nav .tab.active{background:var(--blue);color:#fff}
.container{max-width:980px;margin:14px auto;padding:0 12px}
.card{background:#fff;border:1px solid var(--b);border-radius:12px;padding:12px}
.section-note{font-size:12px;color:var(--mut);margin-top:8px;border-left:3px solid #e6edf7;padding-left:8px}
.grid{display:grid;gap:10px}
.roster-grid{display:grid;grid-template-columns:repeat(4,1fr);gap:12px}
@media(max-width:900px){.roster-grid{grid-template-columns:repeat(2,1fr)}}
.player-card{padding:12px;border-radius:10px;border:1px solid var(--b);background:#fff;text-align:center;cursor:pointer;min-height:110px;display:flex;flex-direction:column;align-items:center;gap:8px}
.player-avatar{width:64px;height:64px;border-radius:50%;overflow:hidden;background:#f1f5f9;display:flex;align-items:center;justify-content:center}
.player-avatar img{width:100%;height:100%;object-fit:cover}
.footer{padding:16px;text-align:center;color:var(--mut);font-size:12px}
.modal-bg{position:fixed;inset:0;background:#0006;display:none;z-index:1200;justify-content:center;align-items:flex-start;padding-top:6vh}
.modal{width:min(880px,calc(100% - 24px));background:#fff;border-radius:12px;padding:16px;border:1px solid var(--b);max-height:90vh;overflow:auto}
.input{width:100%;padding:10px;border:1px solid var(--b);border-radius:8px}
.debug-banner{position:fixed;left:12px;right:12px;top:12px;padding:10px;border-radius:8px;z-index:1300;font-weight:700;text-align:center}
.debug-ok{background:#d9f99d;border:1px solid #86efac;color:#064e03}
.debug-warn{background:#fff4ce;border:1px solid #ffd86b;color:#6b4b00}
.debug-err{background:#ffd7d7;border:1px solid #ff9a9a;color:#7a1d1d}
#debugConsole{position:fixed;right:12px;bottom:12px;width:360px;max-height:240px;overflow:auto;background:#0b1020;color:#e6ffee;padding:8px;border-radius:8px;font-size:12px;z-index:1400}
.small{font-size:12px;color:var(--mut)}
</style>
</head>
<body>

<div id="diagBanner" class="debug-banner debug-warn" style="display:none">
  Estado: <span id="diagMsg">Iniciando...</span>
  <button id="btnRetrySupabase" style="margin-left:12px;padding:6px;border-radius:8px;cursor:pointer">Reintentar Supabase</button>
</div>

<div class="top">
  <div class="brand">
    <img src="Logo.webp" alt="GM"/>
    <div><strong>Golden</strong> <span style="color:var(--lime);font-weight:800">Moms</span></div>
  </div>
  <div style="display:flex;align-items:center;gap:12px">
    <div class="nav" role="tablist" aria-label="NavegaciÃ³n">
      <button class="tab active" data-view="dash">Dashboard</button>
      <button class="tab" data-view="events">Eventos</button>
      <button class="tab" data-view="roster">Plantel</button>
      <button class="tab" data-view="matches">Partidos</button>
    </div>
  </div>
</div>

<div class="container">
  <section id="v-dash">
    <div class="card">
      <h4>Panel</h4>
      <div class="section-note">VersiÃ³n resiliente: si Supabase falla, se muestran datos de ejemplo.</div>
      <div style="display:flex;gap:12px;align-items:center;margin-top:8px">
        <div class="small">Puedes cambiar entre pestaÃ±as y la app seguirÃ¡ siendo interactiva.</div>
        <div style="margin-left:auto"><button id="btnForceLocal" class="btn">Forzar datos locales</button></div>
      </div>
    </div>
  </section>

  <section id="v-events" style="display:none">
    <div class="card">
      <h4>Eventos</h4>
      <div id="monthGrid"></div>
    </div>
  </section>

  <section id="v-roster" style="display:none">
    <div class="card">
      <h4>Plantel</h4>
      <div class="section-note">Listado del plantel (tabla <code>players</code>).</div>
      <div id="rosterGrid" class="roster-grid" style="margin-top:12px"></div>
    </div>
  </section>

  <section id="v-matches" style="display:none">
    <div class="card">
      <h4>Partidos</h4>
      <div id="matchesList"></div>
    </div>
  </section>
</div>

<footer class="footer">Golden Moms Â· hecho con ðŸ’š lima & azul</footer>

<!-- Modal simple -->
<div class="modal-bg" id="modalBg" aria-hidden="true">
  <div class="modal" role="dialog">
    <h3 id="modalTitle">Ficha</h3>
    <div style="display:grid;gap:8px">
      <label>Nombre</label><input id="m_name" class="input">
      <label>Apodo</label><input id="m_apodo" class="input">
      <div style="display:flex;gap:8px;justify-content:flex-end">
        <button id="m_close" class="btn">Cerrar</button>
      </div>
    </div>
  </div>
</div>

<div id="debugConsole" style="display:none"></div>

<script>
/* ---------- CONFIG y estado ---------- */
const SUPA = {
  url: "https://xglojvvbgaivwbpdxvne.supabase.co",
  key: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhnbG9qdnZiZ2FpdndicGR4dm5lIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTUxMjEzMjQsImV4cCI6MjA3MDY5NzMyNH0.vQOBuvphgm0iue-lybJoBVhyai7RtRp8Tfn-hGIKKgw"
};
let supa = null;
let usingLocalFallback = false;

/* ---------- Datos de ejemplo (para mantener dinÃ¡mica la UI si Supabase no responde) ---------- */
const FALLBACK_PLAYERS = [
  { id: 'p1', nombre: 'Alejandra Vasquez', apodo: 'Ale', posicion: 'Delantera' },
  { id: 'p2', nombre: 'Andrea Lopez', apodo: 'Andre', posicion: 'Mediocampo' },
  { id: 'p3', nombre: 'Antonella Sanguinetti', apodo: 'Antonella', posicion: 'Arquera' },
  { id: 'p4', nombre: 'Aurora Perez', apodo: 'Aurora', posicion: 'Defensa' },
  { id: 'p5', nombre: 'Carla Gomez', apodo: 'Carla', posicion: 'Delantera' }
];
const FALLBACK_EVENTS = [
  { id:'e1', title:'Entrenamiento colegio', type:'Entrenamiento', datetime: new Date().toISOString() },
  { id:'e2', title:'Partido amistoso', type:'Partido', datetime: new Date(Date.now()+86400000).toISOString() }
];

/* ---------- utilidades debug visibles y consola interna ---------- */
const diagBanner = document.getElementById('diagBanner');
const diagMsg = document.getElementById('diagMsg');
const debugConsole = document.getElementById('debugConsole');
function debugShow(msg, level='info'){
  console.log('[APP] ' + msg);
  if(!debugConsole) return;
  debugConsole.style.display = '';
  const line = document.createElement('div');
  line.textContent = '[' + new Date().toLocaleTimeString() + '] ' + msg;
  line.style.padding = '4px 6px';
  line.style.borderBottom = '1px solid rgba(255,255,255,0.04)';
  debugConsole.prepend(line);
  diagMsg.textContent = msg;
  if(level==='ok'){ diagBanner.className = 'debug-banner debug-ok'; diagBanner.style.display='block'; }
  else if(level==='warn'){ diagBanner.className = 'debug-banner debug-warn'; diagBanner.style.display='block'; }
  else if(level==='err'){ diagBanner.className = 'debug-banner debug-err'; diagBanner.style.display='block'; }
  else { diagBanner.className = 'debug-banner debug-warn'; diagBanner.style.display='block'; }
}

/* ---------- intento de inicializar Supabase con tiempo de espera ---------- */
async function initSupabase(timeoutMs=5000){
  debugShow('Intentando inicializar Supabase...', 'warn');
  try{
    // si ya existe
    if(typeof createClient === 'function'){ supa = createClient(SUPA.url, SUPA.key); debugShow('createClient global detectado', 'ok'); return supa; }
    if(window.supabase && typeof window.supabase.createClient === 'function'){ supa = window.supabase.createClient(SUPA.url, SUPA.key); debugShow('window.supabase detectado', 'ok'); return supa; }

    // else intenta cargar el SDK dinÃ¡micamente
    await new Promise((resolve,reject)=>{
      const s = document.createElement('script');
      s.src = 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2/dist/supabase.min.js';
      s.async = true;
      let done = false;
      const to = setTimeout(()=>{ if(!done){ done = true; reject(new Error('timeout cargando supabase')); }}, timeoutMs);
      s.onload = ()=>{ if(done) return; done = true; clearTimeout(to); resolve(); };
      s.onerror = ()=>{ if(done) return; done = true; clearTimeout(to); reject(new Error('error cargando supabase')); };
      document.head.appendChild(s);
    });

    // despuÃ©s de cargar
    if(typeof createClient === 'function'){ supa = createClient(SUPA.url, SUPA.key); debugShow('SDK cargado dinÃ¡micamente', 'ok'); return supa; }
    if(window.supabase && typeof window.supabase.createClient === 'function'){ supa = window.supabase.createClient(SUPA.url, SUPA.key); debugShow('SDK disponible en window.supabase', 'ok'); return supa; }
    throw new Error('SDK cargado pero createClient no encontrado');
  }catch(err){
    debugShow('No se pudo inicializar Supabase: ' + (err.message||err), 'err');
    supa = null;
    return null;
  }
}

/* ---------- UI: navegaciÃ³n entre vistas (siempre dinÃ¡mica) ---------- */
function persistView(view){ try{ localStorage.setItem('gm_view', view); }catch(e){} }
function getPersistedView(){ try{ return localStorage.getItem('gm_view'); }catch(e){ return null; } }

document.querySelectorAll('.nav .tab').forEach(btn=>{
  btn.addEventListener('click', ()=> {
    document.querySelectorAll('.nav .tab').forEach(b=>b.classList.remove('active'));
    btn.classList.add('active');
    const view = btn.dataset.view;
    persistView(view);
    showView(view);
  });
});

function showView(v){
  ['dash','events','roster','matches'].forEach(id=>{
    const el = document.getElementById('v-'+id);
    if(el) el.style.display = 'none';
  });
  const sec = document.getElementById('v-'+v);
  if(sec) sec.style.display = 'block';
  if(v==='dash') { /* nothing extra */ }
  if(v==='events') renderMonth();
  if(v==='roster') renderRoster();
  if(v==='matches') renderMatches();
}

/* ---------- render roster (usa supa si disponible, si no usa FALLBACK_PLAYERS) ---------- */
async function renderRoster(){
  const container = document.getElementById('rosterGrid');
  container.innerHTML = '<div class="small">Cargando plantelâ€¦</div>';
  try{
    let players = [];
    if(supa){
      debugShow('Solicitando tabla players a Supabase...', 'warn');
      const { data, error } = await supa.from('players').select('*').order('nombre',{ascending:true});
      if(error){ debugShow('Error consultando players: '+(error.message||error), 'err'); players = FALLBACK_PLAYERS; usingLocalFallback = true; }
      else { players = data || []; usingLocalFallback = false; debugShow('Players cargados desde Supabase: ' + players.length, 'ok'); }
    } else {
      debugShow('Supabase no disponible -> usando datos locales', 'warn');
      players = FALLBACK_PLAYERS; usingLocalFallback = true;
    }

    container.innerHTML = '';
    if(!players || players.length === 0){ container.innerHTML = '<div class="small">No hay jugadoras registradas.</div>'; return; }
    for(const p of players){
      const c = document.createElement('div'); c.className='player-card';
      const av = document.createElement('div'); av.className='player-avatar';
      const img = document.createElement('img');
      img.src = p.foto || p.photo || ('data:image/svg+xml;utf8,'+encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' width='160' height='160'><rect width='100%' height='100%' fill='#f1f5f9'/><text x='50%' y='50%' dominant-baseline='middle' text-anchor='middle' font-family='Arial' font-size='36' fill='#64748b'>${(p.apodo||p.nombre||'GM').split(' ').map(s=>s[0]).slice(0,2).join('')}</text></svg>`)));
      img.alt = p.apodo || p.nombre || '';
      av.appendChild(img);
      const ap = document.createElement('div'); ap.style.fontWeight='800'; ap.textContent = p.apodo || (p.nombre||'').split(' ')[0] || 'Sin apodo';
      const nm = document.createElement('div'); nm.style.fontSize='12px'; nm.style.color='var(--mut)'; nm.textContent = p.nombre || '';
      c.appendChild(av); c.appendChild(ap); c.appendChild(nm);
      c.onclick = ()=> openPlayerModal(p);
      container.appendChild(c);
    }
  }catch(err){
    debugShow('Error renderRoster: '+(err.message||err), 'err');
    container.innerHTML = '<div class="small">Error cargando plantel</div>';
  }
}

/* ---------- modal simple para ver/editar (funcionalidad de ejemplo) ---------- */
const modalBg = document.getElementById('modalBg');
const m_name = document.getElementById('m_name'), m_apodo = document.getElementById('m_apodo'), m_close = document.getElementById('m_close');
let modalEditing = null;
function openPlayerModal(p){
  modalEditing = p || null;
  document.getElementById('modalTitle').textContent = p ? `Ficha â€” ${p.apodo||p.nombre||''}` : 'Nueva';
  m_name.value = p?.nombre || '';
  m_apodo.value = p?.apodo || '';
  modalBg.style.display = 'flex';
  modalBg.setAttribute('aria-hidden','false');
}
function closePlayerModal(){ modalEditing = null; modalBg.style.display = 'none'; modalBg.setAttribute('aria-hidden','true'); }
m_close.addEventListener('click', closePlayerModal);
modalBg.addEventListener('click', (e)=> { if(e.target === modalBg) closePlayerModal(); });

/* ---------- calendar bÃ¡sico (render con datos locales o supa) ---------- */
async function renderMonth(){
  const grid = document.getElementById('monthGrid');
  grid.innerHTML = '';
  let events = [];
  if(supa){
    try{
      const { data, error } = await supa.from('events').select('*').order('datetime',{ascending:true});
      if(error) { debugShow('Error cargando events: '+(error.message||error), 'warn'); events = FALLBACK_EVENTS; usingLocalFallback = true; }
      else { events = data || []; usingLocalFallback = false; debugShow('Events cargados: '+events.length, 'ok'); }
    }catch(e){ events = FALLBACK_EVENTS; usingLocalFallback = true; debugShow('Error fetch events: '+e.message, 'err'); }
  } else { events = FALLBACK_EVENTS; usingLocalFallback = true; debugShow('Usando eventos locales', 'warn'); }

  // render simple
  for(const ev of events){
    const div = document.createElement('div'); div.style.border = '1px solid var(--b)'; div.style.padding='8px'; div.style.margin='6px 0'; div.style.borderRadius='8px';
    const d = new Date(ev.datetime);
    div.innerHTML = `<div style="font-weight:700">${ev.title}</div><div class="small">${d.toLocaleString()}</div>`;
    grid.appendChild(div);
  }
}

/* ---------- matches render simple ---------- */
async function renderMatches(){
  const container = document.getElementById('matchesList');
  container.innerHTML = '';
  if(supa){
    try{
      const { data, error } = await supa.from('matches').select(`*, events:event_id ( id, title, datetime )`).order('created_at',{ascending:false});
      if(error){ debugShow('Error cargando matches: '+(error.message||error), 'warn'); container.innerHTML = '<div class="small">No hay partidos.</div>'; return; }
      if(!data || data.length===0){ container.innerHTML = '<div class="small">No hay registros de partidos.</div>'; return; }
      for(const m of data){
        const ev = m.events || {};
        const d = ev.datetime ? new Date(ev.datetime) : null;
        const el = document.createElement('div'); el.style.border='1px solid var(--b)'; el.style.padding='8px'; el.style.margin='8px 0'; el.style.borderRadius='8px';
        el.innerHTML = `<div style="font-weight:700">${ev.title||'Partido'}</div><div class="small">${d? d.toLocaleString() : ''}</div>`;
        container.appendChild(el);
      }
    }catch(e){ debugShow('Error renderMatches: '+e.message,'err'); container.innerHTML = '<div class="small">Error cargando partidos</div>'; }
  } else {
    const el = document.createElement('div'); el.className='small'; el.textContent='Sin conexiÃ³n â€” vista de partidos local'; container.appendChild(el);
  }
}

/* ---------- helpers UI y botones de debug ---------- */
document.getElementById('btnRetrySupabase').addEventListener('click', async ()=>{
  diagBanner.style.display='none';
  debugConsole.innerHTML = '';
  await boot(); // reintentar
});
document.getElementById('btnForceLocal').addEventListener('click', ()=>{
  supa = null; usingLocalFallback = true; debugShow('Forzado a usar datos locales', 'warn'); renderRoster(); renderMonth(); renderMatches(); showView('roster');
});

/* ---------- BOOT: intenta inicializar supabase, luego render primario ---------- */
async function boot(){
  debugShow('Booting app...', 'warn');
  const client = await initSupabase(4000);
  if(!client){
    usingLocalFallback = true;
    debugShow('Supabase no disponible â€” la app usarÃ¡ datos locales y seguirÃ¡ siendo interactiva. Desactiva extensiones bloqueadoras o prueba Reintentar Supabase.', 'err');
    // muestra vista inicial con fallback
    const persisted = getPersistedView() || 'dash';
    document.querySelectorAll('.nav .tab').forEach(b=>b.classList.remove('active'));
    const btnToActivate = document.querySelector(`.nav .tab[data-view="${persisted}"]`);
    if(btnToActivate) btnToActivate.classList.add('active');
    showView(persisted);
    renderRoster(); renderMonth(); renderMatches();
    return;
  }
  supa = client;
  usingLocalFallback = false;
  debugShow('Supabase inicializado correctamente. Cargando datos desde backend...', 'ok');
  // render de inicio
  const persisted = getPersistedView() || 'dash';
  document.querySelectorAll('.nav .tab').forEach(b=>b.classList.remove('active'));
  const btnToActivate = document.querySelector(`.nav .tab[data-view="${persisted}"]`);
  if(btnToActivate) btnToActivate.classList.add('active');
  showView(persisted);
  renderRoster(); renderMonth(); renderMatches();
}

/* ---------- inicio ---------- */
document.addEventListener('DOMContentLoaded', async ()=>{
  // mostrar consola debug por defecto si no hay supabase
  debugConsole.style.display = 'block';
  await boot();
  // si necesitas esconder el debug en producciÃ³n, llama debugConsole.style.display='none'
});
</script>
</body>
</html>
