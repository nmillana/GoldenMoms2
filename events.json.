<!DOCTYPE html>
<html lang="es">
<head>
<meta charset="utf-8"/>
<meta name="viewport" content="width=device-width,initial-scale=1"/>
<title>Golden Moms — Panel (evento + en tarjeta)</title>
<link rel="icon" href="Logo.webp"/>

<!-- Cargamos el SDK de Supabase de forma explícita (si tu CSP/adblock lo permite). -->
<script src="https://unpkg.com/@supabase/supabase-js@2"></script>

<style>
:root{
  --blue:#0f3a78; --lime:#9be22d; --ink:#0f172a; --mut:#64748b;
  --b:#e2e8f0; --bg:#f7f8fa;
  --lime-strong:#7fd410; --blue-strong:#0a2a58;
  --title-size:12px; --content-size:10px; --sub-size:8px; --kpi-number-size:22px;
  --day-bold-size: 16px;
  --day-bold-size-mobile: 14px;
  --week-sep-height: 8px;
  --week-sep-color: #000;
  --today-border-color: #ff3b3b;
  --month-grid-gap: 18px;
  --month-list-gap: 12px;
}

/* base */
*{box-sizing:border-box}
html,body{margin:0;height:100%;background:var(--bg);color:var(--ink);font-family:Inter,system-ui,Segoe UI,Roboto,Arial}
a{color:inherit;text-decoration:none}

/* Buttons */
.btn{border:1px solid var(--b);border-radius:10px;padding:8px 12px;background:#fff;cursor:pointer;font-size:var(--content-size)}
.btn.p{background:var(--lime);border-color:#a3e635;font-weight:800}
.btn.s{background:#f8fafc}

/* Top bar */
.top{position:sticky;top:0;z-index:30;background:#fff;border-bottom:1px solid var(--b);display:flex;align-items:center;justify-content:space-between;padding:10px 14px;overflow:visible}
.brand{display:flex;gap:10px;align-items:center}
.brand img{width:32px;height:32px;border-radius:50%;border:2px solid var(--blue)}
.brand div{font-size:var(--content-size)}
.nav{display:flex;gap:8px;flex-wrap:nowrap;align-items:center;overflow-x:auto;padding-bottom:4px}
.nav .tab{border:1px solid var(--b);border-radius:999px;padding:8px 12px;background:#fff;cursor:pointer;white-space:nowrap;font-size:var(--content-size)}
.nav .tab.active{background:var(--blue);color:#fff}

/* Layout */
.container{max-width:1200px;margin:14px auto;padding:0 12px}
.grid{display:grid;grid-template-columns:repeat(12,1fr);gap:12px}
.card{background:#fff;border:1px solid var(--b);border-radius:12px;box-shadow:0 8px 20px #0000000a;padding:12px; overflow:visible}
.card h4{margin:0 0 8px;font-size:14px;font-weight:700}
.kpi h3{margin:0;color:var(--mut);font-size:var(--sub-size)}
.kpi .n{font-size:var(--kpi-number-size);font-weight:800}
.section-note{font-size:var(--sub-size);color:var(--mut);margin-top:8px;border-left:3px solid #e6edf7;padding-left:8px}

/* Calendar */
.month-bar{display:flex;align-items:center;gap:8px;justify-content:space-between;margin-bottom:10px;flex-wrap:wrap}
.month-title{font-weight:800;font-size:var(--title-size)}
.month-nav{display:flex;gap:6px}
.month-grid{
  display:grid;
  grid-template-columns:repeat(7,1fr);
  gap: var(--month-grid-gap);
  grid-auto-rows:minmax(90px,auto);
}

/* week separator row in grid */
.month-grid .week-sep{
  grid-column: 1 / -1;
  height: var(--week-sep-height);
  background: var(--week-sep-color);
  border-radius: 4px;
  margin: 10px 0;
  z-index:0;
}

/* weekdays header */
.weekdays{display:grid;grid-template-columns:repeat(7,1fr);gap:var(--month-grid-gap);margin-bottom:8px}
.weekdays div{font-weight:700;color:var(--blue);text-align:center;font-size:var(--content-size)}

/* day cell */
.day{
  min-height:90px;
  background:#fff;
  border:1px solid var(--b);
  border-radius:12px;
  padding:12px;
  position:relative;
  display:flex;
  flex-direction:column;
  gap:6px;
  z-index:0;
}
.day-head{display:flex;align-items:center;justify-content:space-between;margin-bottom:4px}

/* mini square for day (grid) */
.day-num-box{
  background:#f1f5f9;
  border-radius:8px;
  padding:6px 8px;
  display:flex;
  flex-direction:column;
  align-items:center;
  justify-content:center;
  gap:2px;
  min-width:48px;
  line-height:1;
}
.day-num-box .day-wk-grid{
  font-size:10px;
  text-transform:lowercase;
  color:var(--mut);
}
.day-num-box .day-n{
  font-weight:800;
  color:var(--mut);
  font-size: var(--day-bold-size);
}

/* today card border (más grueso y rojo) */
.day.today{
  border: 3px solid var(--today-border-color);
  border-radius:12px;
}

/* + button positioned inside each day in top-right */
.day-add{
  position:absolute;
  top:10px;
  right:10px;
  width:36px;
  height:36px;
  border-radius:999px;
  border:1px solid var(--b);
  background:#eef4ff;
  color:var(--blue);
  display:inline-flex;
  align-items:center;
  justify-content:center;
  cursor:pointer;
  font-size:18px;
  line-height:1;
  box-shadow: 0 4px 8px #00000011;
  z-index:3;
}

/* evento chips */
.ev{border-radius:10px;padding:8px;border:1px solid #0001;cursor:pointer;line-height:1.2;word-break:break-word;font-size:var(--content-size)}
.ev.ev-train{background:var(--lime-strong);color:#0c3200;border-color:#8ed400}
.ev.ev-match{background:#dce9ff;color:var(--blue-strong);border-color:#b9d0ff}

/* Month list fallback (mobile) */
.month-list{display:none;flex-direction:column;gap:var(--month-list-gap)}
.month-list .day{display:flex;flex-direction:row;align-items:flex-start;gap:8px;padding:8px;min-height:auto;position:relative}
.day-date{
  min-width:52px;
  border-radius:8px;
  background:#f1f5f9;
  padding:6px 8px;
  text-align:center;
  font-weight:700;
  color:var(--mut);
  display:flex;
  flex-direction:column;
  align-items:center;
  justify-content:center;
  gap:2px;
  line-height:1;
  font-size:var(--day-bold-size);
}
.day-date .day-wk{ font-size: calc(var(--day-bold-size) - 6px); text-transform:lowercase; color:var(--mut); }
.day-date .day-num{ font-size: calc(var(--day-bold-size)); font-weight:800; color:var(--mut); }

/* today in list view: color del borde (si aplica) */
.month-list .day.today{ border-color: var(--today-border-color); }

/* small text for "Hoy no hay cumpleaños" */
.no-birth { font-size: var(--content-size); color: var(--mut); }

/* week separator in list view */
.month-list .week-sep{
  height: var(--week-sep-height);
  background: var(--week-sep-color);
  border-radius: 4px;
  margin: 10px 0;
  z-index:0;
}

/* Modal (hidden by default) */
.modal-bg{position:fixed;inset:0;background:#0006;display:none;z-index:1000;justify-content:center;align-items:flex-start;padding-top:6vh;overflow-y:auto;-webkit-overflow-scrolling:touch}
.modal{width: min(860px, calc(100% - 24px));margin: 0 auto;background:#fff;border:1px solid var(--b);border-radius:14px;padding:16px;box-shadow:0 20px 40px #00000022;max-height:90vh; overflow:auto; box-sizing:border-box;}
.modal h3{margin:0 0 10px;font-size:var(--title-size)}
.form-row{display:grid;grid-template-columns:1fr 1fr;gap:10px}
@media(max-width:800px){.form-row{grid-template-columns:1fr}}
.input, select, textarea{width:100%;padding:10px;border:1px solid var(--b);border-radius:10px;background:#fff;font-size:var(--content-size)}
.modal-actions{display:flex;gap:8px;justify-content:flex-end;margin-top:10px}

/* Responsive tweaks */
@media (max-width:420px){
  .day-num-box .day-n{ font-size: var(--day-bold-size-mobile); }
  .day-date{ font-size: var(--day-bold-size-mobile); }
  .day-date .day-wk{ font-size: calc(var(--day-bold-size-mobile) - 6px); }
  .day-date .day-num{ font-size: calc(var(--day-bold-size-mobile)); }
  .day-add{ width:34px; height:34px; font-size:16px; top:8px; right:8px; }
}

/* Lists */
ul{ margin:6px 0 6px 18px; padding:0; font-size:var(--content-size) }
li{ margin-bottom:6px; font-size:var(--content-size); line-height:1.2 }

/* Dashboard layout */
.cards-dashboard{
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  gap: 12px;
}
.cards-dashboard .card{ grid-column: auto; }
.card-hoy { grid-column: span 4; }
.card-birth-today { grid-column: span 4; }
.card-birth-next  { grid-column: span 4; }
.card-week        { grid-column: span 12; }

@media (max-width: 900px) {
  .cards-dashboard{ grid-template-columns: 1fr; }
  .card-hoy, .card-birth-today, .card-birth-next, .card-week {
    grid-column: 1 / -1 !important;
  }
}

@media (max-width:900px){
  .grid{grid-template-columns:1fr}
  .month-grid, .weekdays{gap:6px}
  .day{min-height:100px;padding:6px}
  .kpi { padding:12px 10px; }
  .card { padding:12px; }
  .month-bar{flex-wrap:wrap;align-items:center}
}
@media (max-width:420px){
  .month-grid{display:none}
  .weekdays{display:none}
  .month-list{display:flex}
  .month-title{font-size:var(--title-size)}
  .day{padding:8px}
  .day-date{min-width:46px;padding:6px 6px}
  .ev{font-size:var(--content-size);padding:6px}
  .nav .tab{padding:6px 8px;font-size:var(--content-size)}
  .container{padding:0 8px}
  #rosterGrid .card{grid-column:1 / -1 !important}
}

footer{font-size:var(--content-size);color:var(--mut);text-align:center;padding:16px}
</style>
</head>
<body>

<!-- Top -->
<div class="top">
  <div class="brand">
    <img src="Logo.webp" alt="GM"/>
    <div><strong>Golden</strong> <span style="color:var(--lime);font-weight:800">Moms</span></div>
  </div>
  <div style="display:flex;align-items:center;gap:12px">
    <div class="nav" role="tablist" aria-label="Navegación">
      <button class="tab active" data-view="dash">Dashboard</button>
      <button class="tab" data-view="events">Eventos</button>
      <button class="tab" data-view="roster">Plantel</button>
      <button class="tab" data-view="matches">Partidos</button>
    </div>
  </div>
</div>

<div class="container">

  <!-- DASHBOARD -->
  <section id="v-dash">
    <div class="grid" style="align-items:stretch">
      <div class="card kpi" style="grid-column:span 6;display:flex;flex-direction:column;justify-content:space-between">
        <div>
          <h4>Plantel</h4>
          <div class="n" id="kRoster">0</div>
          <div style="font-size:var(--sub-size);color:var(--mut)">Integrantes registrados</div>
        </div>
      </div>

      <div class="card kpi" style="grid-column:span 6;display:flex;flex-direction:column;justify-content:space-between">
        <div>
          <h4>Partidos jugados</h4>
          <div class="n" id="kGames">0</div>
          <div id="lastMatchSummary" style="font-size:var(--content-size);color:var(--mut)"></div>
        </div>
        <div style="margin-top:8px;display:flex;justify-content:flex-end">
          <button class="btn s" onclick="showView('matches')">Ir a partidos</button>
        </div>
      </div>
    </div>

    <!-- REORDEN: Hoy -> Cumpleaños Hoy -> Eventos de la semana -> Próximos cumpleaños -->
    <div class="grid cards-dashboard" style="margin-top:12px;grid-template-columns:repeat(12,1fr);gap:12px">
      <!-- 1) Hoy -->
      <div class="card card-hoy" style="grid-column:span 4">
        <h4>📅 Hoy</h4>
        <div class="section-note">Eventos que ocurren hoy (fecha local).</div>
        <ul id="todayEvents" style="margin:8px 0 0 16px"></ul>
      </div>

      <!-- 2) Cumpleaños — Hoy -->
      <div class="card card-birth-today" style="grid-column:span 4">
        <h4>🎂 Cumpleaños — Hoy</h4>
        <div class="section-note">Personas del plantel que cumplen hoy</div>
        <div id="birthToday" style="margin-top:8px">—</div>
      </div>

      <!-- 3) Eventos de la semana (ocupa toda la fila) -->
      <div class="card card-week" style="grid-column:span 12;margin-top:12px">
        <h4>📅 Eventos de la semana</h4>
        <div class="section-note">Eventos de la semana actual (lunes a domingo).</div>
        <ul id="weekEvents" style="margin:8px 0 0 16px"></ul>
      </div>

      <!-- 4) Próximos cumpleaños -->
      <div class="card card-birth-next" style="grid-column:span 4;margin-top:0">
        <h4>🎉 Próximos cumpleaños</h4>
        <div class="section-note">Lista con los próximos 5 cumpleaños.</div>
        <ul id="upBirth" style="margin:8px 0 0 16px"></ul>
      </div>
    </div>
  </section>

  <!-- EVENTOS -->
  <section id="v-events" style="display:none">
    <div class="card">
      <div class="month-bar">
        <div class="month-nav">
          <button class="btn s" id="btnPrevMonth">◀</button>
          <button class="btn s" id="btnToday">Hoy</button>
          <button class="btn s" id="btnNextMonth">▶</button>
        </div>
        <div style="display:flex;align-items:center;gap:8px">
          <div class="month-title" id="monthTitle">Mes</div>
          <button class="btn p" id="btnNewEventTop">Nuevo Evento</button>
        </div>
      </div>

      <div class="section-note">El calendario muestra eventos agrupados por <strong>fecha local</strong> (YYYY-MM-DD).</div>

      <div class="weekdays">
        <div>Lun</div><div>Mar</div><div>Mié</div><div>Jue</div><div>Vie</div><div>Sáb</div><div>Dom</div>
      </div>

      <div id="monthGrid" class="month-grid"></div>
      <div id="monthList" class="month-list"></div>
    </div>
  </section>

  <!-- PLANTEL -->
  <section id="v-roster" style="display:none">
    <div class="card">
      <h4>Plantel</h4>
      <div class="section-note">Listado del plantel (tabla <code>players</code>).</div>
      <div id="rosterGrid" class="grid" style="margin-top:8px"></div>
    </div>
  </section>

  <!-- PARTIDOS -->
  <section id="v-matches" style="display:none">
    <div class="card">
      <h4>Partidos jugados</h4>
      <div class="section-note">Registro de partidos: goles, diferencia y goleadoras/asistencias.</div>
      <div id="matchesList" style="margin-top:12px"></div>
    </div>
  </section>
</div>

<footer style="text-align:center;padding:16px;color:var(--mut);font-size:var(--content-size)">Golden Moms · hecho con 💚 lima & azul</footer>

<!-- MODAL (oculto por defecto) -->
<div class="modal-bg" id="modalBg" style="display:none;">
  <div class="modal" role="dialog" aria-modal="true">
    <h3 id="modalTitle">Nuevo evento</h3>

    <div class="form-row">
      <div>
        <label>Título</label>
        <input id="f_title" class="input" placeholder="Ej: Entrenamiento Colegio">
      </div>
      <div>
        <label>Tipo</label>
        <select id="f_type" class="input">
          <option>Entrenamiento</option>
          <option>Partido</option>
        </select>
      </div>
    </div>

    <div class="form-row">
      <div>
        <label>Fecha y hora</label>
        <input id="f_dt" type="datetime-local" class="input">
      </div>
      <div>
        <label>Equipo</label>
        <input id="f_team" class="input" value="Golden Moms">
      </div>
    </div>

    <div class="form-row">
      <div>
        <label>Rival (si aplica)</label>
        <input id="f_opponent" class="input" placeholder="Rivales / Liga">
      </div>
      <div>
        <label>Uniforme</label>
        <select id="f_uniform" class="input">
          <option value="">(definir)</option>
          <option>Polera azul — * medias verde lima</option>
          <option>Polera verde lima — * medias verde lima</option>
        </select>
      </div>
    </div>

    <div class="form-row">
      <div>
        <label>Ubicación</label>
        <input id="f_location" class="input" placeholder="Colegio / Cancha / Dirección">
      </div>
      <div>
        <div id="matchExtra" style="display:none">
          <label>Goles a favor</label>
          <input id="f_goals_for" class="input" type="number" min="0" placeholder="Goles a favor">
          <label style="margin-top:8px">Goles en contra</label>
          <input id="f_goals_against" class="input" type="number" min="0" placeholder="Goles en contra">
        </div>
      </div>
    </div>

    <div class="form-row" id="matchPeopleRow" style="display:none">
      <div>
        <label>Goleadoras (coma-separadas)</label>
        <input id="f_scorers" class="input" placeholder="Nombre1, Nombre2">
      </div>
      <div>
        <label>Asistencias (coma-separadas)</label>
        <input id="f_assists" class="input" placeholder="NombreA, NombreB">
      </div>
    </div>

    <div class="form-row">
      <div>
        <label>&nbsp;</label>
        <div class="modal-actions">
          <button class="btn s" id="btnDelete" style="margin-right:auto;display:none">Eliminar</button>
          <button class="btn s" id="btnCancel">Cancelar</button>
          <button class="btn p" id="btnSave">Guardar</button>
        </div>
      </div>
      <div></div>
    </div>
  </div>
</div>

<script>
/* ---------- BOOT + Supabase init (mejorado) ---------- */
console.log('[BOOT] inicio script');

const SUPA = {
  url: "https://xglojvvbgaivwbpdxvne.supabase.co",
  key: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhnbG9qdnZiZ2FpdndicGR4dm5lIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTUxMjEzMjQsImV4cCI6MjA3MDY5NzMyNH0.vQOBuvphgm0iue-lybJoBVhyai7RtRp8Tfn-hGIKKgw"
};
let supa = null;
async function initSupabase(timeoutMs = 6000){
  try{
    // primero intenta usar createClient global (si el script de head cargó)
    if(typeof createClient === 'function'){
      supa = createClient(SUPA.url, SUPA.key);
      console.log('[BOOT] createClient global usada');
      return supa;
    }
    // o window.supabase
    if(window.supabase && typeof window.supabase.createClient === 'function'){
      supa = window.supabase.createClient(SUPA.url, SUPA.key);
      console.log('[BOOT] window.supabase.createClient usada');
      return supa;
    }
    // fallback: cargar dinámicamente
    console.log('[BOOT] SDK no presente, cargando dinámicamente...');
    await new Promise((resolve,reject)=>{
      const s = document.createElement('script');
      s.src = 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2/dist/supabase.min.js';
      s.async = true;
      let done = false;
      const to = setTimeout(()=>{ if(!done){ done = true; reject(new Error('timeout cargando supabase')); }}, timeoutMs);
      s.onload = ()=>{ if(done) return; done = true; clearTimeout(to); resolve(); };
      s.onerror = ()=>{ if(done) return; done = true; clearTimeout(to); reject(new Error('error cargando supabase')); };
      document.head.appendChild(s);
    });
    if(typeof createClient === 'function'){ supa = createClient(SUPA.url, SUPA.key); console.log('[BOOT] SDK cargado (fallback)'); return supa; }
    if(window.supabase && typeof window.supabase.createClient === 'function'){ supa = window.supabase.createClient(SUPA.url, SUPA.key); console.log('[BOOT] SDK cargado (window.supabase)'); return supa; }
    throw new Error('SDK cargado pero createClient no disponible');
  }catch(err){
    console.warn('[BOOT] initSupabase fallo:', err);
    supa = null;
    return null;
  }
}

/* ---------- small helpers (copiadas de tu versión) ---------- */
function pad(n){return n.toString().padStart(2,'0');}
function localInputToISOWithOffset(inp){ if(!inp) return null; const [d,t]=inp.split('T'); const offMin = -new Date().getTimezoneOffset(); const sign = offMin>=0?'+':'-'; const abs=Math.abs(offMin); const oh=pad(Math.floor(abs/60)); const om=pad(abs%60); return `${d}T${t}:00${sign}${oh}:${om}`; }
function isoToLocalInput(iso){ if(!iso) return ''; const d=new Date(iso); return `${d.getFullYear()}-${pad(d.getMonth()+1)}-${pad(d.getDate())}T${pad(d.getHours())}:${pad(d.getMinutes())}`; }
function localDateYMD(d){ const D=new Date(d); return `${D.getFullYear()}-${pad(D.getMonth()+1)}-${pad(D.getDate())}`; }

/* ---------- DOM refs & modal handlers (tu código original) ---------- */
const modalBg = document.getElementById('modalBg');
const f_title = document.getElementById('f_title');
const f_type = document.getElementById('f_type');
const f_dt   = document.getElementById('f_dt');
const f_team = document.getElementById('f_team');
const f_opponent = document.getElementById('f_opponent');
const f_uniform  = document.getElementById('f_uniform');
const f_location = document.getElementById('f_location');
const f_goals_for = document.getElementById('f_goals_for');
const f_goals_against = document.getElementById('f_goals_against');
const f_scorers = document.getElementById('f_scorers');
const f_assists = document.getElementById('f_assists');
const matchExtra = document.getElementById('matchExtra');
const matchPeopleRow = document.getElementById('matchPeopleRow');
const btnDelete = document.getElementById('btnDelete');
const btnCancel = document.getElementById('btnCancel');
const btnSave   = document.getElementById('btnSave');

let editingId = null;

function openModal(opts={}) {
  document.getElementById('modalTitle').textContent = opts.existing ? 'Editar evento' : 'Nuevo evento';
  editingId = null;
  if(opts.existing){
    const e = opts.existing;
    editingId = e.id;
    f_title.value = e.title||'';
    f_type.value  = e.type||'Entrenamiento';
    f_dt.value    = isoToLocalInput(e.datetime);
    f_team.value  = e.team||'Golden Moms';
    f_opponent.value = e.opponent||'';
    f_uniform.value  = e.uniform||'';
    f_location.value = e.location||'';
    if(matchExtra) matchExtra.style.display = 'none';
    if(matchPeopleRow) matchPeopleRow.style.display = 'none';
    btnDelete.style.display='';
  }else{
    editingId = null;
    f_title.value = '';
    f_type.value  = 'Entrenamiento';
    const base = opts.date ? new Date(opts.date) : new Date();
    base.setHours(19,30,0,0);
    f_dt.value = isoToLocalInput(base.toISOString());
    f_team.value  = 'Golden Moms';
    f_opponent.value = '';
    f_uniform.value  = '';
    f_location.value = '';
    if(matchExtra) matchExtra.style.display = 'none';
    if(matchPeopleRow) matchPeopleRow.style.display = 'none';
    btnDelete.style.display='none';
    if(f_goals_for) f_goals_for.value=''; if(f_goals_against) f_goals_against.value=''; if(f_scorers) f_scorers.value=''; if(f_assists) f_assists.value='';
  }
  modalBg.style.display = 'flex';
  modalBg.setAttribute('aria-hidden','false');
}

function closeModal(){
  modalBg.style.display = 'none';
  modalBg.setAttribute('aria-hidden','true');
  editingId = null;
}
modalBg.addEventListener('click', (e) => { if (e.target === modalBg) closeModal(); });
document.addEventListener('keydown', (e)=>{ if(e.key==='Escape') closeModal(); });
btnCancel.addEventListener('click', ()=> closeModal());

btnDelete.addEventListener('click', async ()=>{
  if(!editingId) return;
  if(!confirm('¿Eliminar este evento?')) return;
  if(!supa){ alert('No conectado a Supabase.'); closeModal(); return; }
  try{
    await supa.from('events').delete().eq('id', editingId);
    await supa.from('matches').delete().eq('event_id', editingId);
  }catch(err){
    console.warn('Error eliminando', err);
    alert('Error eliminado. Revisa consola.');
  }
  closeModal();
  renderMonth();
  renderDash();
});

btnSave.addEventListener('click', async ()=>{
  const title = f_title.value.trim();
  const type  = f_type.value;
  const team  = f_team.value.trim();
  const opponent = f_opponent.value.trim();
  const uniform  = f_uniform.value;
  const location = f_location.value.trim();
  if(!title || !f_dt.value){ alert('Completa título y fecha/hora'); return; }
  if(!supa){ alert('No conectado a Supabase. Revisa la consola.'); closeModal(); return; }

  const datetime = localInputToISOWit
